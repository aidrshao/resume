/**
 * Ê£ÄÊü•Êï∞ÊçÆÂ∫ìË°®ÁªìÊûÑËÑöÊú¨
 */

require('dotenv').config();
const knex = require('knex')(require('./knexfile')[process.env.NODE_ENV || 'development']);

async function checkSchema() {
  try {
    console.log('üîç Ê£ÄÊü• user_memberships Ë°®ÁªìÊûÑ...');
    
    const columns = await knex.raw(`
      SELECT column_name, data_type, is_nullable, column_default
      FROM information_schema.columns 
      WHERE table_name = 'user_memberships' 
      ORDER BY ordinal_position;
    `);
    
    console.log('üìã user_memberships Ë°®Â≠óÊÆµ:');
    columns.rows.forEach(col => {
      console.log(`  - ${col.column_name} (${col.data_type}) ${col.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'}`);
    });
    
    console.log('\nüîç Ê£ÄÊü• membership_tiers Ë°®ÁªìÊûÑ...');
    const tierColumns = await knex.raw(`
      SELECT column_name, data_type, is_nullable, column_default
      FROM information_schema.columns 
      WHERE table_name = 'membership_tiers' 
      ORDER BY ordinal_position;
    `);
    
    console.log('üìã membership_tiers Ë°®Â≠óÊÆµ:');
    tierColumns.rows.forEach(col => {
      console.log(`  - ${col.column_name} (${col.data_type}) ${col.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'}`);
    });
    
  } catch (error) {
    console.error('‚ùå Ê£ÄÊü•Â§±Ë¥•:', error.message);
  } finally {
    await knex.destroy();
  }
}

checkSchema(); 