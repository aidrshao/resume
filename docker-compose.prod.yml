# AI俊才社简历管理系统 - 生产环境Docker Compose配置
version: '3.8'

services:
  # PostgreSQL数据库服务
  postgres:
    image: postgres:15-alpine
    container_name: resume_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: resume_db
      POSTGRES_USER: resume_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - resume_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resume_user -d resume_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: resume_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=resume_db
      - DB_USER=resume_user
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8000
      - FRONTEND_URL=${FRONTEND_URL}
      - AGICTO_API_KEY=${AGICTO_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TENCENT_SECRET_ID=${TENCENT_SECRET_ID}
      - TENCENT_SECRET_KEY=${TENCENT_SECRET_KEY}
      - TENCENT_SES_REGION=${TENCENT_SES_REGION}
      - TENCENT_SES_TEMPLATE_ID=${TENCENT_SES_TEMPLATE_ID}
      - TENCENT_SES_FROM_EMAIL=${TENCENT_SES_FROM_EMAIL}
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
      - ./public:/app/public:ro
    ports:
      - "8000:8000"
    networks:
      - resume_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: resume_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - resume_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

# 数据卷定义
volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  redis_data:
    driver: local

# 网络定义
networks:
  resume_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 